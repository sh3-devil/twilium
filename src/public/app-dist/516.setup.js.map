{"version":3,"sources":["webpack://trilium/./src/public/app/dialogs/note_source.js"],"names":["$dialog","$","$noteSource","async","showDialog","noteCompletement","getNoteComplement","text","str","div","document","createElement","innerHTML","trim","formatNode","node","level","indentBefore","Array","join","indentAfter","textNode","i","children","length","createTextNode","insertBefore","lastElementChild","appendChild","formatHtml","content"],"mappings":"yJAGA,MAAMA,EAAUC,EAAE,uBACZC,EAAcD,EAAE,gBAEfE,eAAeC,IAClB,eAAiBJ,GAEjB,MAAMK,QAAyB,2CAA4CC,oBAE3EJ,EAAYK,KAGhB,SAAoBC,GAChB,MAAMC,EAAMC,SAASC,cAAc,OAGnC,OAFAF,EAAIG,UAAYJ,EAAIK,OAKxB,SAASC,EAAWC,EAAMC,GACtB,MAAMC,EAAe,IAAIC,MAAgB,EAAVF,KAAaG,KAAK,MAC3CC,EAAe,IAAIF,MAAMF,EAAQ,GAAGG,KAAK,MAC/C,IAAIE,EAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAKQ,SAASC,OAAQF,IACtCD,EAAWX,SAASe,eAAe,KAAOR,GAC1CF,EAAKW,aAAaL,EAAUN,EAAKQ,SAASD,IAE1CR,EAAWC,EAAKQ,SAASD,GAAIN,GAEzBD,EAAKY,mBAAqBZ,EAAKQ,SAASD,KACxCD,EAAWX,SAASe,eAAe,KAAOL,GAC1CL,EAAKa,YAAYP,IAIzB,OAAON,EApBAD,CAAWL,EAAK,GAAGG,UAAUC,OAPnBgB,CAAWxB,EAAiByB","file":"516.setup.js","sourcesContent":["import appContext from \"../services/app_context.js\";\nimport utils from \"../services/utils.js\";\n\nconst $dialog = $(\"#note-source-dialog\");\nconst $noteSource = $(\"#note-source\");\n\nexport async function showDialog() {\n    utils.openDialog($dialog);\n\n    const noteCompletement = await appContext.tabManager.getActiveTabContext().getNoteComplement();\n\n    $noteSource.text(formatHtml(noteCompletement.content));\n}\n\nfunction formatHtml(str) {\n    const div = document.createElement('div');\n    div.innerHTML = str.trim();\n\n    return formatNode(div, 0).innerHTML.trim();\n}\n\nfunction formatNode(node, level) {\n    const indentBefore = new Array(level++ + 1).join('  ');\n    const indentAfter  = new Array(level - 1).join('  ');\n    let textNode;\n\n    for (let i = 0; i < node.children.length; i++) {\n        textNode = document.createTextNode('\\n' + indentBefore);\n        node.insertBefore(textNode, node.children[i]);\n\n        formatNode(node.children[i], level);\n\n        if (node.lastElementChild === node.children[i]) {\n            textNode = document.createTextNode('\\n' + indentAfter);\n            node.appendChild(textNode);\n        }\n    }\n\n    return node;\n}"],"sourceRoot":""}