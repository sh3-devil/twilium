(window.webpackJsonptrilium=window.webpackJsonptrilium||[]).push([[475],{9475:(s,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});var e=n(9800),o=n(6885);class r{constructor(){$("#options-sync-setup").html('\n<h4 style="margin-top: 0px;">Sync configuration</h4>\n\n<form id="sync-setup-form">\n    <div class="form-group">\n        <label for="sync-server-host">Server instance address</label>\n        <input class="form-control" id="sync-server-host" placeholder="https://<host>:<port>">\n    </div>\n\n    <div class="form-group">\n        <label for="sync-server-timeout">Sync timeout (milliseconds)</label>\n        <input class="form-control" id="sync-server-timeout" min="1" max="10000000" type="number" style="text-align: left;">\n    </div>\n\n    <div class="form-group">\n        <label for="sync-proxy">Sync proxy server (optional)</label>\n        <input class="form-control" id="sync-proxy" placeholder="https://<host>:<port>">\n\n        <p><strong>Note:</strong> If you leave proxy setting blank, system proxy will be used (applies to desktop/electron build only)</p>\n    </div>\n\n    <div style="display: flex; justify-content: space-between;">\n        <button class="btn btn-primary">Save</button>\n\n        <button class="btn" type="button" data-help-page="Synchronization">Help</button>\n    </div>\n</form>\n\n<br/>\n\n<h4>Sync test</h4>\n\n<p>This will test connection and handshake to the sync server. If sync server isn\'t initialized, this will set it up to sync with local document.</p>\n\n<button id="test-sync-button" class="btn">Test sync</button>'),this.$form=$("#sync-setup-form"),this.$syncServerHost=$("#sync-server-host"),this.$syncServerTimeout=$("#sync-server-timeout"),this.$syncProxy=$("#sync-proxy"),this.$testSyncButton=$("#test-sync-button"),this.$form.on("submit",()=>this.save()),this.$testSyncButton.on("click",async()=>{const s=await e.Z.post("sync/test");s.success?o.default.showMessage(s.message):o.default.showError("Sync server handshake failed, error: "+s.message)})}optionsLoaded(s){this.$syncServerHost.val(s.syncServerHost),this.$syncServerTimeout.val(s.syncServerTimeout),this.$syncProxy.val(s.syncProxy)}save(){const s={syncServerHost:this.$syncServerHost.val(),syncServerTimeout:this.$syncServerTimeout.val(),syncProxy:this.$syncProxy.val()};return e.Z.put("options",s).then(()=>o.default.showMessage("Options change have been saved.")),!1}}}}]);
//# sourceMappingURL=475.desktop.js.map