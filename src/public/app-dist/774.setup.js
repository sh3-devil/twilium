(window.webpackJsonptrilium=window.webpackJsonptrilium||[]).push([[774],{774:(t,e,s)=>{"use strict";s.r(e),s.d(e,{showDialog:()=>k});var n=s(46),i=s(707),o=s(800),r=s(806),a=s(985);const l=[["Arrow",{location:1,id:"arrow",length:10,width:10,foldback:.7}]];class c{constructor(t,e,s={}){this.note=t,this.options=Object.assign({maxDepth:10,maxNotes:30,zoom:1,stopCheckerCallback:()=>!1},s),this.$linkMapContainer=e,this.linkMapContainerId=this.$linkMapContainer.attr("id")}async render(){await i.Z.requireLibrary(i.Z.LINK_MAP),jsPlumb.ready(()=>{this.options.stopCheckerCallback()||(this.initJsPlumbInstance(),this.initPanZoom(),this.loadNotesAndRelations())})}async loadNotesAndRelations(t={}){if(this.options=Object.assign(this.options,t),this.cleanup(),this.options.stopCheckerCallback())return;const e=await o.Z.post(`notes/${this.note.noteId}/link-map`,{maxNotes:this.options.maxNotes,maxDepth:this.options.maxDepth}),s=new Set(e.map(t=>t.noteId).concat(e.map(t=>t.targetNoteId)));0===s.size&&s.add(this.note.noteId);const n=await r.Z.getNotes(Array.from(s),!0),i=new Springy.Graph;i.addNodes(...s),i.addEdges(...e.map(t=>[t.noteId,t.targetNoteId]));const l=new Springy.Layout.ForceDirected(i,this.options.stopCheckerCallback,400,600,.15,.1),c=t=>{const e=this.noteIdToId(t),s=$("#"+e);if(s.length>0)return s;const i=n.find(e=>e.noteId===t);if(!i)return null;const o=$("<div>").addClass("note-box").prop("id",e);return a.Z.createNoteLink(t,{title:i.title}).then(t=>{t.on("click",e=>{try{t.tooltip("dispose")}catch(e){}a.Z.goToLink(e)}),o.append($("<span>").addClass("title").append(t))}),t===this.note.noteId&&o.addClass("link-map-active-note"),o.mouseover(()=>this.$linkMapContainer.find(".link-"+t).addClass("jsplumb-connection-hover")).mouseout(()=>this.$linkMapContainer.find(".link-"+t).removeClass("jsplumb-connection-hover")),this.$linkMapContainer.append(o),this.jsPlumbInstance.draggable(o[0],{start:t=>{this.renderer.stop()},drag:t=>{},stop:t=>{}}),o};this.options.stopCheckerCallback()||(this.renderer=new Springy.Renderer(l),await this.renderer.start(500),l.eachNode((t,e)=>{const s=c(t.id),n=this.$linkMapContainer.width()/2,i=this.$linkMapContainer.height()/2;s.css("left",n+100*e.p.x+"px").css("top",i+100*e.p.y+"px"),s.hasClass("link-map-active-note")&&this.moveToCenterOfElement(s[0])}),l.eachEdge(t=>{const e=this.linkMapContainerId+"-"+t.source.id+"-"+t.target.id;if($("#"+e).length>0)return;c(t.source.id),c(t.target.id);const s=this.jsPlumbInstance.connect({source:this.noteIdToId(t.source.id),target:this.noteIdToId(t.target.id),type:"link"});s&&$(s.canvas).prop("id",e).addClass("link-"+t.source.id).addClass("link-"+t.target.id)}),this.jsPlumbInstance.repaintEverything())}moveToCenterOfElement(t){const e=this.pzInstance.getOwner(),s=()=>{const s=t.getBoundingClientRect(),n=e.getBoundingClientRect(),i=-s.left+n.left+n.width/2-s.width/2,o=-s.top+n.top+n.height/2-s.height/2,r=this.pzInstance.getTransform(),a=r.x+i,l=r.y+o;this.pzInstance.moveTo(a,l)};let n=!1;new IntersectionObserver(t=>{!n&&t[0].isIntersecting&&(n=!0,s())},{rootMargin:"0px",threshold:.1}).observe(e)}initPanZoom(){this.pzInstance||(this.pzInstance=panzoom(this.$linkMapContainer[0],{maxZoom:2,minZoom:.3,smoothScroll:!1,filterKey:function(t,e,s,n){return t.altKey}}))}cleanup(){this.renderer&&this.renderer.stop(),this.jsPlumbInstance&&(this.jsPlumbInstance.deleteEveryEndpoint(),this.$linkMapContainer.empty(),this.pzInstance.zoomAbs(0,0,this.options.zoom),this.pzInstance.moveTo(0,0))}initJsPlumbInstance(){this.jsPlumbInstance?this.cleanup():(this.jsPlumbInstance=jsPlumb.getInstance({Endpoint:["Blank",{}],ConnectionOverlays:l,PaintStyle:{stroke:"var(--muted-text-color)",strokeWidth:1},HoverPaintStyle:{stroke:"var(--main-text-color)",strokeWidth:1},Container:this.$linkMapContainer.attr("id")}),this.jsPlumbInstance.registerConnectionType("link",{anchor:"Continuous",connector:"Straight",overlays:l}))}noteIdToId(t){return this.linkMapContainerId+"-note-"+t}}var d=s(95);const h=$("#link-map-container"),p=$("#link-map-dialog"),m=$("#link-map-max-notes");let u;function b(){return{maxNotes:m.val()}}async function k(){m.val(20),h.css("height",$("body").height()-150),h.empty(),n.Z.openDialog(p)}p.on("shown.bs.modal",()=>{const t=d.default.tabManager.getActiveTabNote();u=new c(t,h,b()),u.render()}),m.on("input",()=>u.loadNotesAndRelations(b()))},707:(t,e,s)=>{"use strict";s.d(e,{Z:()=>r});const n={};async function i(t){n[t]||(n[t]=$.ajax({url:t,dataType:"script",cache:!0})),await n[t]}async function o(t){Array.from(document.querySelectorAll("link")).map(t=>t.href).some(e=>e.endsWith(t))||$("head").append($('<link rel="stylesheet" type="text/css" />').attr("href",t))}const r={requireCss:o,requireLibrary:async function(t){if(t.css&&t.css.map(t=>o(t)),t.js)for(const e of t.js)await i(e)},CKEDITOR:{js:["libraries/ckeditor/ckeditor.js"]},CODE_MIRROR:{js:["libraries/codemirror/codemirror.js","libraries/codemirror/addon/mode/loadmode.js","libraries/codemirror/addon/fold/xml-fold.js","libraries/codemirror/addon/edit/matchbrackets.js","libraries/codemirror/addon/edit/matchtags.js","libraries/codemirror/addon/search/match-highlighter.js","libraries/codemirror/mode/meta.js","libraries/codemirror/addon/lint/lint.js","libraries/codemirror/addon/lint/eslint.js"],css:["libraries/codemirror/codemirror.css","libraries/codemirror/addon/lint/lint.css"]},ESLINT:{js:["libraries/eslint.js"]},COMMONMARK:{js:["libraries/commonmark.min.js"]},RELATION_MAP:{js:["libraries/jsplumb.js","libraries/panzoom.js"],css:["stylesheets/relation_map.css"]},LINK_MAP:{js:["libraries/jsplumb.js","libraries/panzoom.js","libraries/springy.js"],css:["stylesheets/link_map.css"]},PRINT_THIS:{js:["libraries/printThis.js"]},KNOCKOUT:{js:["libraries/knockout.min.js"]},CALENDAR_WIDGET:{css:["stylesheets/calendar.css"]}}}}]);
//# sourceMappingURL=774.setup.js.map