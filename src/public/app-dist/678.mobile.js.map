{"version":3,"sources":["webpack://trilium/./src/public/app/dialogs/options/advanced.js"],"names":["AdvancedOptions","$","html","this","$forceFullSyncButton","$fillSyncRowsButton","$anonymizeButton","$backupDatabaseButton","$vacuumDatabaseButton","$findAndFixConsistencyIssuesButton","on","async","resp","success","anonymizedFilePath","backupFile"],"mappings":"0JAsCe,MAAMA,EACjB,cACIC,EAAE,qBAAqBC,KArCnB,krCAuCJC,KAAKC,qBAAuBH,EAAE,2BAC9BE,KAAKE,oBAAsBJ,EAAE,0BAC7BE,KAAKG,iBAAmBL,EAAE,qBAC1BE,KAAKI,sBAAwBN,EAAE,2BAC/BE,KAAKK,sBAAwBP,EAAE,2BAC/BE,KAAKM,mCAAqCR,EAAE,2CAE5CE,KAAKC,qBAAqBM,GAAG,QAASC,gBAC5B,SAAY,wBAElB,sBAAyB,yBAG7BR,KAAKE,oBAAoBK,GAAG,QAASC,gBAC3B,SAAY,uBAElB,sBAAyB,mCAG7BR,KAAKG,iBAAiBI,GAAG,QAASC,UAC9B,MAAMC,QAAa,SAAY,sBAE1BA,EAAKC,QAIN,sBAAyB,kCAAkCD,EAAKE,mBAAsB,KAHtF,oBAAuB,0EAO/BX,KAAKI,sBAAsBG,GAAG,QAASC,UACnC,MAAM,WAACI,SAAoB,SAAY,4BAEvC,sBAAyB,kCAAoCA,EAAY,OAG7EZ,KAAKK,sBAAsBE,GAAG,QAASC,gBAC7B,SAAY,4BAElB,sBAAyB,gCAG7BR,KAAKM,mCAAmCC,GAAG,QAASC,gBAC1C,SAAY,4CAElB,sBAAyB","file":"678.mobile.js","sourcesContent":["import server from \"../../services/server.js\";\nimport toastService from \"../../services/toast.js\";\n\nconst TPL = `\n<h4 style=\"margin-top: 0;\">Sync</h4>\n<button id=\"force-full-sync-button\" class=\"btn\">Force full sync</button>\n\n<br/>\n<br/>\n\n<button id=\"fill-sync-rows-button\" class=\"btn\">Fill sync rows</button>\n\n<br/>\n<br/>\n\n<h4>Consistency checks</h4>\n\n<button id=\"find-and-fix-consistency-issues-button\" class=\"btn\">Find and fix consistency issues</button><br/><br/>\n\n<h4>Anonymize database</h4>\n\n<p>This action will create a new copy of the database and anonymise it (remove all note content and leave only structure and some non-sensitive metadata)\n    for sharing online for debugging purposes without fear of leaking your personal data.</p>\n\n<button id=\"anonymize-button\" class=\"btn\">Save anonymized database</button><br/><br/>\n\n<h4>Backup database</h4>\n\n<p>Trilium has automatic backup (daily, weekly, monthly), but you can also trigger backup manually here.</p>\n\n<button id=\"backup-database-button\" class=\"btn\">Backup database now</button><br/><br/>\n\n<h4>Vacuum database</h4>\n\n<p>This will rebuild database which will typically result in smaller database file. No data will be actually changed.</p>\n\n<button id=\"vacuum-database-button\" class=\"btn\">Vacuum database</button>`;\n\nexport default class AdvancedOptions {\n    constructor() {\n        $(\"#options-advanced\").html(TPL);\n\n        this.$forceFullSyncButton = $(\"#force-full-sync-button\");\n        this.$fillSyncRowsButton = $(\"#fill-sync-rows-button\");\n        this.$anonymizeButton = $(\"#anonymize-button\");\n        this.$backupDatabaseButton = $(\"#backup-database-button\");\n        this.$vacuumDatabaseButton = $(\"#vacuum-database-button\");\n        this.$findAndFixConsistencyIssuesButton = $(\"#find-and-fix-consistency-issues-button\");\n\n        this.$forceFullSyncButton.on('click', async () => {\n            await server.post('sync/force-full-sync');\n\n            toastService.showMessage(\"Full sync triggered\");\n        });\n\n        this.$fillSyncRowsButton.on('click', async () => {\n            await server.post('sync/fill-sync-rows');\n\n            toastService.showMessage(\"Sync rows filled successfully\");\n        });\n\n        this.$anonymizeButton.on('click', async () => {\n            const resp = await server.post('database/anonymize');\n\n            if (!resp.success) {\n                toastService.showError(\"Could not create anonymized database, check backend logs for details\");\n            }\n            else {\n                toastService.showMessage(`Created anonymized database in ${resp.anonymizedFilePath}`, 10000);\n            }\n        });\n\n        this.$backupDatabaseButton.on('click', async () => {\n            const {backupFile} = await server.post('database/backup-database');\n\n            toastService.showMessage(\"Database has been backed up to \" + backupFile, 10000);\n        });\n\n        this.$vacuumDatabaseButton.on('click', async () => {\n            await server.post('database/vacuum-database');\n\n            toastService.showMessage(\"Database has been vacuumed\");\n        });\n\n        this.$findAndFixConsistencyIssuesButton.on('click', async () => {\n            await server.post('database/find-and-fix-consistency-issues');\n\n            toastService.showMessage(\"Consistency issues should be fixed.\");\n        });\n    }\n}\n"],"sourceRoot":""}