{"version":3,"sources":["webpack://trilium/./src/public/app/dialogs/add_link.js"],"names":["$dialog","$","$form","$autoComplete","$linkTitle","$addLinkTitleSettings","$addLinkTitleFormGroup","textTypeWidget","async","showDialog","widget","setDefaultLinkTitle","noteId","noteTitle","val","toggle","hasSelection","find","on","updateTitleFormGroupVisibility","prop","trigger","event","suggestion","dataset","path","getLinkType","visible","notePath","getSelectedPath","modal","linkTitle","addLink","console","error"],"mappings":"wKAIA,MAAMA,EAAUC,EAAE,oBACZC,EAAQD,EAAE,kBACVE,EAAgBF,EAAE,+BAClBG,EAAaH,EAAE,eACfI,EAAwBJ,EAAE,4BAC1BK,EAAyBL,EAAE,8BAGjC,IAAIM,EAEGC,eAAeC,EAAWC,GAsB7BF,eAAeG,EAAoBC,GAC/B,MAAMC,QAAkB,iBAAyBD,GAEjDR,EAAWU,IAAID,GAxBnBN,EAAiBG,EAEjBL,EAAsBU,QAAQR,EAAeS,gBAE7CX,EAAsBY,KAAK,qBAAqBC,GAAG,SAAUC,GAGzDZ,EAAeS,eACfX,EAAsBY,KAAK,6BAA6BG,KAAK,WAAW,GAGxEf,EAAsBY,KAAK,iCAAiCG,KAAK,WAAW,GAGhFD,IAEA,eAAiBnB,GAEjBG,EAAcW,IAAI,IAAIO,QAAQ,SAC9BjB,EAAWU,IAAI,IAQf,yBAA6CX,GAE7CA,EAAce,GAAG,yBAAyB,SAASI,EAAOC,EAAYC,GAClE,IAAKD,EAAWE,KACZ,OAAO,EAGX,MAAMb,EAAS,0BAAkCW,EAAWE,MAExDb,GACAD,EAAoBC,MAI5BT,EAAce,GAAG,8BAA8B,SAASI,EAAOC,EAAYC,GACvE,MAAMZ,EAAS,0BAAkCW,EAAWE,MAExDb,GACAD,EAAoBC,MAI5B,oBAAwCT,GAG5C,SAASuB,IACL,OAAOrB,EAAsBY,KAAK,6BAA6BH,MAGnE,SAASK,IACL,MAAMQ,EAA4B,eAAlBD,IAEhBpB,EAAuBS,OAAOY,GAGlCzB,EAAMgB,GAAG,SAAU,KACf,MAAMU,EAAWzB,EAAc0B,kBAE/B,GAAID,EAAU,CACV5B,EAAQ8B,MAAM,QAEd,MAAMC,EAA8B,mBAAlBL,IAAqC,KAAOtB,EAAWU,MAEzEP,EAAeyB,QAAQJ,EAAUG,QAGjCE,QAAQC,MAAM,wBAGlB,OAAO","file":"741.mobile.js","sourcesContent":["import treeService from '../services/tree.js';\nimport noteAutocompleteService from \"../services/note_autocomplete.js\";\nimport utils from \"../services/utils.js\";\n\nconst $dialog = $(\"#add-link-dialog\");\nconst $form = $(\"#add-link-form\");\nconst $autoComplete = $(\"#add-link-note-autocomplete\");\nconst $linkTitle = $(\"#link-title\");\nconst $addLinkTitleSettings = $(\"#add-link-title-settings\");\nconst $addLinkTitleFormGroup = $(\"#add-link-title-form-group\");\n\n/** @var TextTypeWidget */\nlet textTypeWidget;\n\nexport async function showDialog(widget) {\n    textTypeWidget = widget;\n\n    $addLinkTitleSettings.toggle(!textTypeWidget.hasSelection());\n\n    $addLinkTitleSettings.find('input[type=radio]').on('change', updateTitleFormGroupVisibility);\n\n    // with selection hyper link is implied\n    if (textTypeWidget.hasSelection()) {\n        $addLinkTitleSettings.find(\"input[value='hyper-link']\").prop(\"checked\", true);\n    }\n    else {\n        $addLinkTitleSettings.find(\"input[value='reference-link']\").prop(\"checked\", true);\n    }\n\n    updateTitleFormGroupVisibility();\n\n    utils.openDialog($dialog);\n\n    $autoComplete.val('').trigger('focus');\n    $linkTitle.val('');\n\n    async function setDefaultLinkTitle(noteId) {\n        const noteTitle = await treeService.getNoteTitle(noteId);\n\n        $linkTitle.val(noteTitle);\n    }\n\n    noteAutocompleteService.initNoteAutocomplete($autoComplete);\n\n    $autoComplete.on('autocomplete:selected', function(event, suggestion, dataset) {\n        if (!suggestion.path) {\n            return false;\n        }\n\n        const noteId = treeService.getNoteIdFromNotePath(suggestion.path);\n\n        if (noteId) {\n            setDefaultLinkTitle(noteId);\n        }\n    });\n\n    $autoComplete.on('autocomplete:cursorchanged', function(event, suggestion, dataset) {\n        const noteId = treeService.getNoteIdFromNotePath(suggestion.path);\n\n        if (noteId) {\n            setDefaultLinkTitle(noteId);\n        }\n    });\n\n    noteAutocompleteService.showRecentNotes($autoComplete);\n}\n\nfunction getLinkType() {\n    return $addLinkTitleSettings.find('input[type=radio]:checked').val();\n}\n\nfunction updateTitleFormGroupVisibility() {\n    const visible = getLinkType() === 'hyper-link';\n\n    $addLinkTitleFormGroup.toggle(visible);\n}\n\n$form.on('submit', () => {\n    const notePath = $autoComplete.getSelectedPath();\n\n    if (notePath) {\n        $dialog.modal('hide');\n\n        const linkTitle = getLinkType() === 'reference-link' ? null : $linkTitle.val();\n\n        textTypeWidget.addLink(notePath, linkTitle);\n    }\n    else {\n        console.error(\"No path to add link.\");\n    }\n\n    return false;\n});\n"],"sourceRoot":""}