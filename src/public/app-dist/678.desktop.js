(window.webpackJsonptrilium=window.webpackJsonptrilium||[]).push([[678],{678:(a,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});var s=t(9800),e=t(6885);class o{constructor(){$("#options-advanced").html('\n<h4 style="margin-top: 0;">Sync</h4>\n<button id="force-full-sync-button" class="btn">Force full sync</button>\n\n<br/>\n<br/>\n\n<button id="fill-sync-rows-button" class="btn">Fill sync rows</button>\n\n<br/>\n<br/>\n\n<h4>Consistency checks</h4>\n\n<button id="find-and-fix-consistency-issues-button" class="btn">Find and fix consistency issues</button><br/><br/>\n\n<h4>Anonymize database</h4>\n\n<p>This action will create a new copy of the database and anonymise it (remove all note content and leave only structure and some non-sensitive metadata)\n    for sharing online for debugging purposes without fear of leaking your personal data.</p>\n\n<button id="anonymize-button" class="btn">Save anonymized database</button><br/><br/>\n\n<h4>Backup database</h4>\n\n<p>Trilium has automatic backup (daily, weekly, monthly), but you can also trigger backup manually here.</p>\n\n<button id="backup-database-button" class="btn">Backup database now</button><br/><br/>\n\n<h4>Vacuum database</h4>\n\n<p>This will rebuild database which will typically result in smaller database file. No data will be actually changed.</p>\n\n<button id="vacuum-database-button" class="btn">Vacuum database</button>'),this.$forceFullSyncButton=$("#force-full-sync-button"),this.$fillSyncRowsButton=$("#fill-sync-rows-button"),this.$anonymizeButton=$("#anonymize-button"),this.$backupDatabaseButton=$("#backup-database-button"),this.$vacuumDatabaseButton=$("#vacuum-database-button"),this.$findAndFixConsistencyIssuesButton=$("#find-and-fix-consistency-issues-button"),this.$forceFullSyncButton.on("click",async()=>{await s.Z.post("sync/force-full-sync"),e.default.showMessage("Full sync triggered")}),this.$fillSyncRowsButton.on("click",async()=>{await s.Z.post("sync/fill-sync-rows"),e.default.showMessage("Sync rows filled successfully")}),this.$anonymizeButton.on("click",async()=>{const a=await s.Z.post("database/anonymize");a.success?e.default.showMessage("Created anonymized database in "+a.anonymizedFilePath,1e4):e.default.showError("Could not create anonymized database, check backend logs for details")}),this.$backupDatabaseButton.on("click",async()=>{const{backupFile:a}=await s.Z.post("database/backup-database");e.default.showMessage("Database has been backed up to "+a,1e4)}),this.$vacuumDatabaseButton.on("click",async()=>{await s.Z.post("database/vacuum-database"),e.default.showMessage("Database has been vacuumed")}),this.$findAndFixConsistencyIssuesButton.on("click",async()=>{await s.Z.post("database/find-and-fix-consistency-issues"),e.default.showMessage("Consistency issues should be fixed.")})}}}}]);
//# sourceMappingURL=678.desktop.js.map