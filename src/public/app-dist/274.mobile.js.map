{"version":3,"sources":["webpack://trilium/./src/public/app/services/import.js"],"names":["async","uploadFiles","parentNoteId","files","options","length","taskId","noteId","counter","file","formData","FormData","append","key","$","ajax","url","baseApiUrl","headers","data","dataType","type","timeout","contentType","processData","makeToast","id","message","title","icon","taskType","progressCount","toast","closeAfter","result","importedNoteId","setNote"],"mappings":"2MAMOA,eAAeC,EAAYC,EAAcC,EAAOC,GACnD,GAAqB,IAAjBD,EAAME,OACN,OAGJ,MAAMC,EAAS,iBAAmB,IAClC,IAAIC,EACAC,EAAU,EAEd,IAAK,MAAMC,KAAQN,EAAO,CACtBK,IAEA,MAAME,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUH,GAC1BC,EAASE,OAAO,SAAUN,GAC1BI,EAASE,OAAO,OAAQJ,IAAYL,EAAME,OAAS,OAAS,SAE5D,IAAK,MAAMQ,KAAOT,EACdM,EAASE,OAAOC,EAAKT,EAAQS,MAG/BN,gBAAgBO,EAAEC,KAAK,CACrBC,IAAKC,WAAa,SAAWf,EAAe,UAC5CgB,QAAS,iBACTC,KAAMT,EACNU,SAAU,OACVC,KAAM,OACNC,QAAS,KACTC,aAAa,EACbC,aAAa,MAKzB,SAASC,EAAUC,EAAIC,GACnB,MAAO,CACHD,GAAIA,EACJE,MAAO,gBACPD,QAASA,EACTE,KAAM,QAId,wBAAuB7B,UACnB,GAAyB,WAArB2B,EAAQG,SAIZ,GAAqB,eAAjBH,EAAQN,KACR,0BAA6BM,EAAQrB,QACrC,oBAAuBqB,EAAQA,cAC5B,GAAqB,wBAAjBA,EAAQN,KACf,yBAA4BI,EAAUE,EAAQrB,OAAQ,uBAAyBqB,EAAQI,qBACpF,GAAqB,mBAAjBJ,EAAQN,KAA2B,CAC1C,MAAMW,EAAQP,EAAUE,EAAQrB,OAAQ,iCACxC0B,EAAMC,WAAa,IAEnB,yBAA4BD,GAExBL,EAAQO,OAAOC,sBACT,2CAA4CC,QAAQT,EAAQO,OAAOC,mBAKrF,SACIlC","file":"274.mobile.js","sourcesContent":["import toastService from \"./toast.js\";\nimport server from \"./server.js\";\nimport ws from \"./ws.js\";\nimport utils from \"./utils.js\";\nimport appContext from \"./app_context.js\";\n\nexport async function uploadFiles(parentNoteId, files, options) {\n    if (files.length === 0) {\n        return;\n    }\n\n    const taskId = utils.randomString(10);\n    let noteId;\n    let counter = 0;\n\n    for (const file of files) {\n        counter++;\n\n        const formData = new FormData();\n        formData.append('upload', file);\n        formData.append('taskId', taskId);\n        formData.append('last', counter === files.length ? \"true\" : \"false\");\n\n        for (const key in options) {\n            formData.append(key, options[key]);\n        }\n\n        ({noteId} = await $.ajax({\n            url: baseApiUrl + 'notes/' + parentNoteId + '/import',\n            headers: server.getHeaders(),\n            data: formData,\n            dataType: 'json',\n            type: 'POST',\n            timeout: 60 * 60 * 1000,\n            contentType: false, // NEEDED, DON'T REMOVE THIS\n            processData: false, // NEEDED, DON'T REMOVE THIS\n        }));\n    }\n}\n\nfunction makeToast(id, message) {\n    return {\n        id: id,\n        title: \"Import status\",\n        message: message,\n        icon: \"plus\"\n    };\n}\n\nws.subscribeToMessages(async message => {\n    if (message.taskType !== 'import') {\n        return;\n    }\n\n    if (message.type === 'task-error') {\n        toastService.closePersistent(message.taskId);\n        toastService.showError(message.message);\n    } else if (message.type === 'task-progress-count') {\n        toastService.showPersistent(makeToast(message.taskId, \"Import in progress: \" + message.progressCount));\n    } else if (message.type === 'task-succeeded') {\n        const toast = makeToast(message.taskId, \"Import finished successfully.\");\n        toast.closeAfter = 5000;\n\n        toastService.showPersistent(toast);\n\n        if (message.result.importedNoteId) {\n            await appContext.tabManager.getActiveTabContext().setNote(message.result.importedNoteId);\n        }\n    }\n});\n\nexport default {\n    uploadFiles\n}"],"sourceRoot":""}