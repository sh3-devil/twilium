(window.webpackJsonptrilium=window.webpackJsonptrilium||[]).push([[774],{4774:(t,n,e)=>{"use strict";e.r(n),e.d(n,{showDialog:()=>g});var o=e(9046),i=e(6707),s=e(9800),a=e(9806),r=e(7844);const l=[["Arrow",{location:1,id:"arrow",length:10,width:10,foldback:.7}]];class c{constructor(t,n,e={}){this.note=t,this.options=Object.assign({maxDepth:10,maxNotes:30,zoom:1,stopCheckerCallback:()=>!1},e),this.$linkMapContainer=n,this.linkMapContainerId=this.$linkMapContainer.attr("id")}async render(){await i.Z.requireLibrary(i.Z.LINK_MAP),jsPlumb.ready(()=>{this.options.stopCheckerCallback()||(this.initJsPlumbInstance(),this.initPanZoom(),this.loadNotesAndRelations())})}async loadNotesAndRelations(t={}){if(this.options=Object.assign(this.options,t),this.cleanup(),this.options.stopCheckerCallback())return;const n=await s.Z.post(`notes/${this.note.noteId}/link-map`,{maxNotes:this.options.maxNotes,maxDepth:this.options.maxDepth}),e=new Set(n.map(t=>t.noteId).concat(n.map(t=>t.targetNoteId)));0===e.size&&e.add(this.note.noteId);const o=await a.Z.getNotes(Array.from(e),!0),i=new Springy.Graph;i.addNodes(...e),i.addEdges(...n.map(t=>[t.noteId,t.targetNoteId]));const l=new Springy.Layout.ForceDirected(i,this.options.stopCheckerCallback,400,600,.15,.1),c=t=>{const n=this.noteIdToId(t),e=$("#"+n);if(e.length>0)return e;const i=o.find(n=>n.noteId===t);if(!i)return null;const s=$("<div>").addClass("note-box").prop("id",n);return r.Z.createNoteLink(t,{title:i.title}).then(t=>{t.on("click",n=>{try{t.tooltip("dispose")}catch(n){}r.Z.goToLink(n)}),s.append($("<span>").addClass("title").append(t))}),t===this.note.noteId&&s.addClass("link-map-active-note"),s.mouseover(()=>this.$linkMapContainer.find(".link-"+t).addClass("jsplumb-connection-hover")).mouseout(()=>this.$linkMapContainer.find(".link-"+t).removeClass("jsplumb-connection-hover")),this.$linkMapContainer.append(s),this.jsPlumbInstance.draggable(s[0],{start:t=>{this.renderer.stop()},drag:t=>{},stop:t=>{}}),s};this.options.stopCheckerCallback()||(this.renderer=new Springy.Renderer(l),await this.renderer.start(500),l.eachNode((t,n)=>{const e=c(t.id),o=this.$linkMapContainer.width()/2,i=this.$linkMapContainer.height()/2;e.css("left",o+100*n.p.x+"px").css("top",i+100*n.p.y+"px"),e.hasClass("link-map-active-note")&&this.moveToCenterOfElement(e[0])}),l.eachEdge(t=>{const n=this.linkMapContainerId+"-"+t.source.id+"-"+t.target.id;if($("#"+n).length>0)return;c(t.source.id),c(t.target.id);const e=this.jsPlumbInstance.connect({source:this.noteIdToId(t.source.id),target:this.noteIdToId(t.target.id),type:"link"});e&&$(e.canvas).prop("id",n).addClass("link-"+t.source.id).addClass("link-"+t.target.id)}),this.jsPlumbInstance.repaintEverything())}moveToCenterOfElement(t){const n=this.pzInstance.getOwner(),e=()=>{const e=t.getBoundingClientRect(),o=n.getBoundingClientRect(),i=-e.left+o.left+o.width/2-e.width/2,s=-e.top+o.top+o.height/2-e.height/2,a=this.pzInstance.getTransform(),r=a.x+i,l=a.y+s;this.pzInstance.moveTo(r,l)};let o=!1;new IntersectionObserver(t=>{!o&&t[0].isIntersecting&&(o=!0,e())},{rootMargin:"0px",threshold:.1}).observe(n)}initPanZoom(){this.pzInstance||(this.pzInstance=panzoom(this.$linkMapContainer[0],{maxZoom:2,minZoom:.3,smoothScroll:!1,filterKey:function(t,n,e,o){return t.altKey}}))}cleanup(){this.renderer&&this.renderer.stop(),this.jsPlumbInstance&&(this.jsPlumbInstance.deleteEveryEndpoint(),this.$linkMapContainer.empty(),this.pzInstance.zoomAbs(0,0,this.options.zoom),this.pzInstance.moveTo(0,0))}initJsPlumbInstance(){this.jsPlumbInstance?this.cleanup():(this.jsPlumbInstance=jsPlumb.getInstance({Endpoint:["Blank",{}],ConnectionOverlays:l,PaintStyle:{stroke:"var(--muted-text-color)",strokeWidth:1},HoverPaintStyle:{stroke:"var(--main-text-color)",strokeWidth:1},Container:this.$linkMapContainer.attr("id")}),this.jsPlumbInstance.registerConnectionType("link",{anchor:"Continuous",connector:"Straight",overlays:l}))}noteIdToId(t){return this.linkMapContainerId+"-note-"+t}}var d=e(4362);const h=$("#link-map-container"),p=$("#link-map-dialog"),m=$("#link-map-max-notes");let u;function k(){return{maxNotes:m.val()}}async function g(){m.val(20),h.css("height",$("body").height()-150),h.empty(),o.Z.openDialog(p)}p.on("shown.bs.modal",()=>{const t=d.default.tabManager.getActiveTabNote();u=new c(t,h,k()),u.render()}),m.on("input",()=>u.loadNotesAndRelations(k()))}}]);
//# sourceMappingURL=774.mobile.js.map