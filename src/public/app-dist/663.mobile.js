(window.webpackJsonptrilium=window.webpackJsonptrilium||[]).push([[663],{1663:(e,t,o)=>{"use strict";o.r(t),o.d(t,{showDialog:()=>w});var r=o(8481),n=o(9046),s=o(1520),i=o(6885),p=o(9806);const a=$("#export-dialog"),c=$("#export-form"),l=a.find(".export-note-title"),d=$("#export-subtree-formats"),u=$("#export-single-formats"),m=$("#export-type-subtree"),f=$("#export-type-single"),g=$("#export-button"),h=$("#opml-versions");let x="",k=null;async function w(e,t){if(x="",g.removeAttr("disabled"),"subtree"===t)m.prop("checked",!0).trigger("change"),$("input[name=export-subtree-format]:checked").trigger("change");else{if("single"!==t)throw new Error("Unrecognized type "+t);f.prop("checked",!0).trigger("change")}$("#opml-v2").prop("checked",!0),n.Z.openDialog(a);const{noteId:o,parentNoteId:s}=r.Z.getNoteIdAndParentIdFromNotePath(e);k=await p.Z.getBranchId(s,o);const i=await r.Z.getNoteTitle(o);l.html(i)}function b(e,t){return{id:e,title:"Export status",message:t,icon:"arrow-square-up-right"}}c.on("submit",()=>{a.modal("hide");const e=a.find("input[name='export-type']:checked").val();if(!e)return void alert("Choose export type first please");const t="subtree"===e?$("input[name=export-subtree-format]:checked").val():$("input[name=export-single-format]:checked").val(),o="opml"===t?a.find("input[name='opml-version']:checked").val():"1.0";return function(e,t,o,r){x=n.Z.randomString(10);const s=n.Z.getUrlForDownload(`api/notes/${e}/export/${t}/${o}/${r}/${x}`);n.Z.download(s)}(k,e,t,o),!1}),$("input[name=export-type]").on("change",(function(){"subtree"===this.value?(0===$("input[name=export-subtree-format]:checked").length&&$("input[name=export-subtree-format]:first").prop("checked",!0),d.slideDown(),u.slideUp()):(0===$("input[name=export-single-format]:checked").length&&$("input[name=export-single-format]:first").prop("checked",!0),d.slideUp(),u.slideDown())})),$("input[name=export-subtree-format]").on("change",(function(){"opml"===this.value?h.slideDown():h.slideUp()})),s.Z.subscribeToMessages(async e=>{if("export"===e.taskType)if("task-error"===e.type)i.default.closePersistent(e.taskId),i.default.showError(e.message);else if("task-progress-count"===e.type)i.default.showPersistent(b(e.taskId,"Export in progress: "+e.progressCount));else if("task-succeeded"===e.type){const t=b(e.taskId,"Import finished successfully.");t.closeAfter=5e3,i.default.showPersistent(t)}})}}]);
//# sourceMappingURL=663.mobile.js.map