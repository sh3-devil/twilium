{"version":3,"sources":["webpack://trilium/./src/public/app/dialogs/options/keyboard_shortcuts.js"],"names":["globActions","KeyboardShortcutsOptions","$","html","on","$table","then","actions","action","$tr","separator","append","attr","text","actionName","val","effectiveShortcuts","join","defaultShortcuts","description","e","$input","target","shortcuts","replace","split","map","shortcut","filter","opts","JSON","stringify","async","confirmDialog","confirm","find","each","this","trigger","$filter","trim","toLowerCase","i","el","show","hide","act","toggle","includes","some"],"mappings":"uJAiCA,IAAIA,EAEW,MAAMC,EACjB,cACIC,EAAE,+BAA+BC,KAlC7B,g6BAoCJD,EAAE,0CAA0CE,GAAG,QAAS,IAAM,iBAE9D,MAAMC,EAASH,EAAE,kCAEjB,QAAW,oBAAoBI,KAAKC,IAChCP,EAAcO,EAEd,IAAK,MAAMC,KAAUD,EAAS,CAC1B,MAAME,EAAMP,EAAE,QAEVM,EAAOE,UACPD,EAAIE,OACAT,EAAE,oBACGU,KAAK,QAAQ,0EACbC,KAAKL,EAAOE,YAIrBD,EAAIE,OAAOT,EAAE,QAAQW,KAAKL,EAAOM,aAC5BH,OAAOT,EAAE,QAAQS,OACdT,EAAE,4CACGa,IAAIP,EAAOQ,mBAAmBC,KAAK,OACnCL,KAAK,4BAA6BJ,EAAOM,YACzCF,KAAK,kCAAmCJ,EAAOU,iBAAiBD,KAAK,SAG7EN,OAAOT,EAAE,QAAQW,KAAKL,EAAOU,iBAAiBD,KAAK,QACnDN,OAAOT,EAAE,QAAQW,KAAKL,EAAOW,cAGtCd,EAAOM,OAAOF,MAItBJ,EAAOD,GAAG,SAAU,qBAAsBgB,IACtC,MAAMC,EAASnB,EAAEkB,EAAEE,QACbR,EAAaO,EAAOT,KAAK,6BACzBW,EAAYF,EAAON,MACNS,QAAQ,KAAM,UACdC,MAAM,KACNC,IAAIC,GAAYA,EAASH,QAAQ,SAAU,OAC3CI,OAAOD,KAAcA,GAElCE,EAAO,GACbA,EAAK,oBAAsBf,GAAcgB,KAAKC,UAAUR,GAExD,QAAW,UAAWM,KAG1B3B,EAAE,kDAAkDE,GAAG,QAAS4B,UAC5D,MAAMC,QAAsB,mCAEjBA,EAAcC,QAAQ,uEAIjC7B,EAAO8B,KAAK,sBAAsBC,MAAK,WACnC,MAAMlB,EAAmBhB,EAAEmC,MAAMzB,KAAK,mCAElCV,EAAEmC,MAAMtB,QAAUG,GAClBhB,EAAEmC,MACGtB,IAAIG,GACJoB,QAAQ,eAKzB,MAAMC,EAAUrC,EAAE,6BAElBqC,EAAQnC,GAAG,QAAS,KAChB,MAAMwB,EAASW,EAAQxB,MAAMyB,OAAOC,cAEpCpC,EAAO8B,KAAK,MAAMC,KAAK,CAACM,EAAGC,KACvB,IAAKf,EAED,YADA1B,EAAEyC,GAAIC,OAIV,MAAM9B,EAAaZ,EAAEyC,GAAIR,KAAK,SAASvB,KAAK,6BAE5C,IAAKE,EAED,YADAZ,EAAEyC,GAAIE,OAIV,MAAMrC,EAASR,EAAYmC,KAAKW,GAAOA,EAAIhC,aAAeA,GAErDN,EAKLN,EAAEyC,GAAII,UACFvC,EAAOM,WAAW2B,cAAcO,SAASpB,IACtCpB,EAAOU,iBAAiB+B,KAAKtB,GAAYA,EAASc,cAAcO,SAASpB,KACzEpB,EAAOQ,mBAAmBiC,KAAKtB,GAAYA,EAASc,cAAcO,SAASpB,KAC1EpB,EAAOW,aAAeX,EAAOW,YAAYsB,cAAcO,SAASpB,KARpE1B,EAAEyC,GAAIE","file":"761.setup.js","sourcesContent":["import server from \"../../services/server.js\";\nimport utils from \"../../services/utils.js\";\n\nconst TPL = `\n<h4>Keyboard shortcuts</h4>\n\n<p>Multiple shortcuts for the same action can be separated by comma.</p>\n\n<div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" id=\"keyboard-shortcut-filter\" placeholder=\"Type text to filter shortcuts...\">\n</div>\n\n<div style=\"overflow: auto; height: 500px;\">\n    <table id=\"keyboard-shortcut-table\" cellpadding=\"10\">\n    <thead>\n        <tr>\n            <th>Action name</th>\n            <th>Shortcuts</th>\n            <th>Default shortcuts</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody></tbody>\n    </table>\n</div>\n\n<div style=\"display: flex; justify-content: space-between\">\n    <button class=\"btn btn-primary\" id=\"options-keyboard-shortcuts-reload-app\">Reload app to apply changes</button>\n    \n    <button class=\"btn\" id=\"options-keyboard-shortcuts-set-all-to-default\">Set all shortcuts to the default</button>\n</div>\n`;\n\nlet globActions;\n\nexport default class KeyboardShortcutsOptions {\n    constructor() {\n        $(\"#options-keyboard-shortcuts\").html(TPL);\n\n        $(\"#options-keyboard-shortcuts-reload-app\").on(\"click\", () => utils.reloadApp());\n\n        const $table = $(\"#keyboard-shortcut-table tbody\");\n\n        server.get('keyboard-actions').then(actions => {\n            globActions = actions;\n\n            for (const action of actions) {\n                const $tr = $(\"<tr>\");\n\n                if (action.separator) {\n                    $tr.append(\n                        $('<td colspan=\"4\">')\n                            .attr(\"style\",\"background-color: var(--accented-background-color); font-weight: bold;\")\n                            .text(action.separator)\n                    )\n                }\n                else {\n                    $tr.append($(\"<td>\").text(action.actionName))\n                        .append($(\"<td>\").append(\n                            $(`<input type=\"text\" class=\"form-control\">`)\n                                .val(action.effectiveShortcuts.join(\", \"))\n                                .attr('data-keyboard-action-name', action.actionName)\n                                .attr('data-default-keyboard-shortcuts', action.defaultShortcuts.join(\", \"))\n                            )\n                        )\n                        .append($(\"<td>\").text(action.defaultShortcuts.join(\", \")))\n                        .append($(\"<td>\").text(action.description));\n                }\n\n                $table.append($tr);\n            }\n        });\n\n        $table.on('change', 'input.form-control', e => {\n            const $input = $(e.target);\n            const actionName = $input.attr('data-keyboard-action-name');\n            const shortcuts = $input.val()\n                              .replace('+,', \"+Comma\")\n                              .split(\",\")\n                              .map(shortcut => shortcut.replace(\"+Comma\", \"+,\"))\n                              .filter(shortcut => !!shortcut);\n\n            const opts = {};\n            opts['keyboardShortcuts' + actionName] = JSON.stringify(shortcuts);\n\n            server.put('options', opts);\n        });\n\n        $(\"#options-keyboard-shortcuts-set-all-to-default\").on('click', async () => {\n            const confirmDialog = await import('../confirm.js');\n\n            if (!await confirmDialog.confirm(\"Do you really want to reset all keyboard shortcuts to the default?\")) {\n                return;\n            }\n\n            $table.find('input.form-control').each(function() {\n                const defaultShortcuts = $(this).attr('data-default-keyboard-shortcuts');\n\n                if ($(this).val() !== defaultShortcuts) {\n                    $(this)\n                        .val(defaultShortcuts)\n                        .trigger('change');\n                }\n            });\n        });\n\n        const $filter = $(\"#keyboard-shortcut-filter\");\n\n        $filter.on('keyup', () => {\n            const filter = $filter.val().trim().toLowerCase();\n\n            $table.find(\"tr\").each((i, el) => {\n                if (!filter) {\n                    $(el).show();\n                    return;\n                }\n\n                const actionName = $(el).find('input').attr('data-keyboard-action-name');\n\n                if (!actionName) {\n                    $(el).hide();\n                    return;\n                }\n\n                const action = globActions.find(act => act.actionName === actionName);\n\n                if (!action) {\n                    $(el).hide();\n                    return;\n                }\n\n                $(el).toggle(!!( // !! to avoid toggle overloads with different behavior\n                    action.actionName.toLowerCase().includes(filter)\n                    || action.defaultShortcuts.some(shortcut => shortcut.toLowerCase().includes(filter))\n                    || action.effectiveShortcuts.some(shortcut => shortcut.toLowerCase().includes(filter))\n                    || (action.description && action.description.toLowerCase().includes(filter))\n                ));\n            });\n        });\n    }\n}"],"sourceRoot":""}