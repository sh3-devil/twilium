{"version":3,"sources":["webpack://trilium/./src/public/app/dialogs/options/sync.js"],"names":["SyncOptions","$","html","this","$form","$syncServerHost","$syncServerTimeout","$syncProxy","$testSyncButton","on","save","async","result","success","message","options","val","opts","then"],"mappings":"wJAuCe,MAAMA,EACjB,cACIC,EAAE,uBAAuBC,KAtCrB,i2CAwCJC,KAAKC,MAAQH,EAAE,oBACfE,KAAKE,gBAAkBJ,EAAE,qBACzBE,KAAKG,mBAAqBL,EAAE,wBAC5BE,KAAKI,WAAaN,EAAE,eACpBE,KAAKK,gBAAkBP,EAAE,qBAEzBE,KAAKC,MAAMK,GAAG,SAAU,IAAMN,KAAKO,QAEnCP,KAAKK,gBAAgBC,GAAG,QAASE,UAC7B,MAAMC,QAAe,SAAY,aAE7BA,EAAOC,QACP,sBAAyBD,EAAOE,SAGhC,oBAAuB,wCAA0CF,EAAOE,WAKpF,cAAcC,GACVZ,KAAKE,gBAAgBW,IAAID,EAAwB,gBACjDZ,KAAKG,mBAAmBU,IAAID,EAA2B,mBACvDZ,KAAKI,WAAWS,IAAID,EAAmB,WAG3C,OACI,MAAME,EAAO,CACT,eAAkBd,KAAKE,gBAAgBW,MACvC,kBAAqBb,KAAKG,mBAAmBU,MAC7C,UAAab,KAAKI,WAAWS,OAKjC,OAFA,QAAW,UAAWC,GAAMC,KAAK,IAAO,sBAAyB,qCAE1D","file":"475.setup.js","sourcesContent":["import server from \"../../services/server.js\";\nimport toastService from \"../../services/toast.js\";\n\nconst TPL = `\n<h4 style=\"margin-top: 0px;\">Sync configuration</h4>\n\n<form id=\"sync-setup-form\">\n    <div class=\"form-group\">\n        <label for=\"sync-server-host\">Server instance address</label>\n        <input class=\"form-control\" id=\"sync-server-host\" placeholder=\"https://<host>:<port>\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"sync-server-timeout\">Sync timeout (milliseconds)</label>\n        <input class=\"form-control\" id=\"sync-server-timeout\" min=\"1\" max=\"10000000\" type=\"number\" style=\"text-align: left;\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"sync-proxy\">Sync proxy server (optional)</label>\n        <input class=\"form-control\" id=\"sync-proxy\" placeholder=\"https://<host>:<port>\">\n\n        <p><strong>Note:</strong> If you leave proxy setting blank, system proxy will be used (applies to desktop/electron build only)</p>\n    </div>\n\n    <div style=\"display: flex; justify-content: space-between;\">\n        <button class=\"btn btn-primary\">Save</button>\n\n        <button class=\"btn\" type=\"button\" data-help-page=\"Synchronization\">Help</button>\n    </div>\n</form>\n\n<br/>\n\n<h4>Sync test</h4>\n\n<p>This will test connection and handshake to the sync server. If sync server isn't initialized, this will set it up to sync with local document.</p>\n\n<button id=\"test-sync-button\" class=\"btn\">Test sync</button>`;\n\nexport default class SyncOptions {\n    constructor() {\n        $(\"#options-sync-setup\").html(TPL);\n\n        this.$form = $(\"#sync-setup-form\");\n        this.$syncServerHost = $(\"#sync-server-host\");\n        this.$syncServerTimeout = $(\"#sync-server-timeout\");\n        this.$syncProxy = $(\"#sync-proxy\");\n        this.$testSyncButton = $(\"#test-sync-button\");\n\n        this.$form.on('submit', () => this.save());\n\n        this.$testSyncButton.on('click', async () => {\n            const result = await server.post('sync/test');\n\n            if (result.success) {\n                toastService.showMessage(result.message);\n            }\n            else {\n                toastService.showError(\"Sync server handshake failed, error: \" + result.message);\n            }\n        });\n    }\n\n    optionsLoaded(options) {\n        this.$syncServerHost.val(options['syncServerHost']);\n        this.$syncServerTimeout.val(options['syncServerTimeout']);\n        this.$syncProxy.val(options['syncProxy']);\n    }\n\n    save() {\n        const opts = {\n            'syncServerHost': this.$syncServerHost.val(),\n            'syncServerTimeout': this.$syncServerTimeout.val(),\n            'syncProxy': this.$syncProxy.val()\n        };\n\n        server.put('options', opts).then(()  => toastService.showMessage(\"Options change have been saved.\"));\n\n        return false;\n    }\n}"],"sourceRoot":""}