(window.webpackJsonptrilium=window.webpackJsonptrilium||[]).push([[12],{4012:(t,e,i)=>{"use strict";i.r(e),i.d(e,{default:()=>l});var n=i(9800),o=i(9046),a=i(8003),s=i(6707);class l{constructor(){$("#options-appearance").html('\n<p><strong>Settings on this options tab are saved automatically after each change.</strong></p>\n\n<form>\n    <div class="form-group row">\n        <div class="col-4">\n            <label for="theme-select">Theme</label>\n            <select class="form-control" id="theme-select"></select>\n        </div>\n\n        <div class="col-4">\n            <label for="zoom-factor-select">Zoom factor (desktop build only)</label>\n\n            <input type="number" class="form-control" id="zoom-factor-select" min="0.3" max="2.0" step="0.1"/>\n        </div>\n        \n        <div class="col-4">\n            <label for="native-title-bar-select">Native title bar (requires app restart)</label>\n\n            <select class="form-control" id="native-title-bar-select">\n                <option value="show">enabled</option>\n                <option value="hide">disabled</option>\n            </select>\n        </div>\n    </div>\n\n    <p>Zooming can be controlled with CTRL-+ and CTRL-= shortcuts as well.</p>\n\n    <h4>Font sizes</h4>\n\n    <div class="form-group row">\n        <div class="col-4">\n            <label for="main-font-size">Main font size</label>\n\n            <div class="input-group">\n                <input type="number" class="form-control" id="main-font-size" min="50" max="200" step="10"/>\n                <div class="input-group-append">\n                    <span class="input-group-text">%</span>\n                </div>\n            </div>\n        </div>\n\n        <div class="col-4">\n            <label for="tree-font-size">Note tree font size</label>\n\n            <div class="input-group">\n                <input type="number" class="form-control" id="tree-font-size" min="50" max="200" step="10"/>\n                <div class="input-group-append">\n                    <span class="input-group-text">%</span>\n                </div>\n            </div>\n        </div>\n\n        <div class="col-4">\n            <label for="detail-font-size">Note detail font size</label>\n\n            <div class="input-group">\n                <input type="number" class="form-control" id="detail-font-size" min="50" max="200" step="10"/>\n                <div class="input-group-append">\n                    <span class="input-group-text">%</span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <p>Note that tree and detail font sizing is relative to the main font size setting.</p>\n</form>'),this.$themeSelect=$("#theme-select"),this.$zoomFactorSelect=$("#zoom-factor-select"),this.$nativeTitleBarSelect=$("#native-title-bar-select"),this.$mainFontSize=$("#main-font-size"),this.$treeFontSize=$("#tree-font-size"),this.$detailFontSize=$("#detail-font-size"),this.$body=$("body"),this.$themeSelect.on("change",()=>{const t=this.$themeSelect.val();for(const t of Array.from(this.$body[0].classList))t.startsWith("theme-")&&this.$body.removeClass(t);const e=$(this).find(":selected").attr("data-note-id");e&&s.Z.requireCss("api/notes/download/"+e),this.$body.addClass("theme-"+t),n.Z.put("options/theme/"+t)}),this.$zoomFactorSelect.on("change",()=>{a.default.triggerCommand("setZoomFactorAndSave",{zoomFactor:this.$zoomFactorSelect.val()})}),this.$nativeTitleBarSelect.on("change",()=>{const t="show"===this.$nativeTitleBarSelect.val()?"true":"false";n.Z.put("options/nativeTitleBarVisible/"+t)}),this.$mainFontSize.on("change",async()=>{await n.Z.put("options/mainFontSize/"+this.$mainFontSize.val()),this.applyFontSizes()}),this.$treeFontSize.on("change",async()=>{await n.Z.put("options/treeFontSize/"+this.$treeFontSize.val()),this.applyFontSizes()}),this.$detailFontSize.on("change",async()=>{await n.Z.put("options/detailFontSize/"+this.$detailFontSize.val()),this.applyFontSizes()})}async optionsLoaded(t){const e=[{val:"white",title:"White"},{val:"dark",title:"Dark"},{val:"black",title:"Black"}].concat(await n.Z.get("options/user-themes"));this.$themeSelect.empty();for(const t of e)this.$themeSelect.append($("<option>").attr("value",t.val).attr("data-note-id",t.noteId).html(t.title));this.$themeSelect.val(t.theme),o.Z.isElectron()?this.$zoomFactorSelect.val(t.zoomFactor):this.$zoomFactorSelect.prop("disabled",!0),this.$nativeTitleBarSelect.val("true"===t.nativeTitleBarVisible?"show":"hide"),this.$mainFontSize.val(t.mainFontSize),this.$treeFontSize.val(t.treeFontSize),this.$detailFontSize.val(t.detailFontSize)}applyFontSizes(){this.$body.get(0).style.setProperty("--main-font-size",this.$mainFontSize.val()+"%"),this.$body.get(0).style.setProperty("--tree-font-size",this.$treeFontSize.val()+"%"),this.$body.get(0).style.setProperty("--detail-font-size",this.$detailFontSize.val()+"%")}}}}]);
//# sourceMappingURL=12.desktop.js.map