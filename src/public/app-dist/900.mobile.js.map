{"version":3,"sources":["webpack://trilium/./src/public/app/dialogs/import.js","webpack://trilium/./src/public/app/services/import.js"],"names":["$dialog","$","$form","$noteTitle","find","$fileUploadInput","$importButton","$safeImportCheckbox","$shrinkImagesCheckbox","$textImportedAsTextCheckbox","$codeImportedAsCodeCheckbox","$explodeArchivesCheckbox","parentNoteId","async","showDialog","noteId","val","trigger","prop","text","boolToString","$el","is","on","attr","files","Array","from","options","safeImport","shrinkImages","textImportedAsText","codeImportedAsCode","explodeArchives","modal","importIntoNote","removeAttr","uploadFiles","length","taskId","counter","file","formData","FormData","append","key","ajax","url","baseApiUrl","headers","data","dataType","type","timeout","contentType","processData","makeToast","id","message","title","icon","taskType","progressCount","toast","closeAfter","result","importedNoteId","setNote"],"mappings":"2KAIA,MAAMA,EAAUC,EAAE,kBACZC,EAAQD,EAAE,gBACVE,EAAaH,EAAQI,KAAK,sBAC1BC,EAAmBJ,EAAE,6BACrBK,EAAgBL,EAAE,kBAClBM,EAAsBN,EAAE,yBACxBO,EAAwBP,EAAE,2BAC1BQ,EAA8BR,EAAE,mCAChCS,EAA8BT,EAAE,mCAChCU,EAA2BV,EAAE,8BAEnC,IAAIW,EAAe,KAEZC,eAAeC,EAAWC,GAC7BV,EAAiBW,IAAI,IAAIC,QAAQ,UAEjCV,EAAoBW,KAAK,WAAW,GACpCV,EAAsBU,KAAK,WAAW,GACtCT,EAA4BS,KAAK,WAAW,GAC5CR,EAA4BQ,KAAK,WAAW,GAC5CP,EAAyBO,KAAK,WAAW,GAEzCN,EAAeG,EAEfZ,EAAWgB,WAAW,iBAAyBP,IAE/C,eAAiBZ,GA4BrB,SAASoB,EAAaC,GAClB,OAAOA,EAAIC,GAAG,YAAc,OAAS,QA1BzCpB,EAAMqB,GAAG,SAAU,KAEfjB,EAAckB,KAAK,WAAY,YAOnCX,eAA8BD,GAC1B,MAAMa,EAAQC,MAAMC,KAAKtB,EAAiB,GAAGoB,OAEvCG,EAAU,CACZC,WAAYT,EAAab,GACzBuB,aAAcV,EAAaZ,GAC3BuB,mBAAoBX,EAAaX,GACjCuB,mBAAoBZ,EAAaV,GACjCuB,gBAAiBb,EAAaT,IAGlCX,EAAQkC,MAAM,cAER,sBAA0BtB,EAAca,EAAOG,GAlBrDO,CAAevB,IAER,IAuBXP,EAAiBkB,GAAG,SAAU,KACtBlB,EAAiBW,MACjBV,EAAc8B,WAAW,YAGzB9B,EAAckB,KAAK,WAAY,e,kIC7DhCX,eAAewB,EAAYzB,EAAca,EAAOG,GACnD,GAAqB,IAAjBH,EAAMa,OACN,OAGJ,MAAMC,EAAS,iBAAmB,IAClC,IAAIxB,EACAyB,EAAU,EAEd,IAAK,MAAMC,KAAQhB,EAAO,CACtBe,IAEA,MAAME,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUH,GAC1BC,EAASE,OAAO,SAAUL,GAC1BG,EAASE,OAAO,OAAQJ,IAAYf,EAAMa,OAAS,OAAS,SAE5D,IAAK,MAAMO,KAAOjB,EACdc,EAASE,OAAOC,EAAKjB,EAAQiB,MAG/B9B,gBAAgBd,EAAE6C,KAAK,CACrBC,IAAKC,WAAa,SAAWpC,EAAe,UAC5CqC,QAAS,iBACTC,KAAMR,EACNS,SAAU,OACVC,KAAM,OACNC,QAAS,KACTC,aAAa,EACbC,aAAa,MAKzB,SAASC,EAAUC,EAAIC,GACnB,MAAO,CACHD,GAAIA,EACJE,MAAO,gBACPD,QAASA,EACTE,KAAM,QAId,wBAAuB/C,UACnB,GAAyB,WAArB6C,EAAQG,SAIZ,GAAqB,eAAjBH,EAAQN,KACR,0BAA6BM,EAAQnB,QACrC,oBAAuBmB,EAAQA,cAC5B,GAAqB,wBAAjBA,EAAQN,KACf,yBAA4BI,EAAUE,EAAQnB,OAAQ,uBAAyBmB,EAAQI,qBACpF,GAAqB,mBAAjBJ,EAAQN,KAA2B,CAC1C,MAAMW,EAAQP,EAAUE,EAAQnB,OAAQ,iCACxCwB,EAAMC,WAAa,IAEnB,yBAA4BD,GAExBL,EAAQO,OAAOC,sBACT,2CAA4CC,QAAQT,EAAQO,OAAOC,mBAKrF,SACI7B","file":"900.mobile.js","sourcesContent":["import utils from '../services/utils.js';\nimport treeService from \"../services/tree.js\";\nimport importService from \"../services/import.js\";\n\nconst $dialog = $(\"#import-dialog\");\nconst $form = $(\"#import-form\");\nconst $noteTitle = $dialog.find(\".import-note-title\");\nconst $fileUploadInput = $(\"#import-file-upload-input\");\nconst $importButton = $(\"#import-button\");\nconst $safeImportCheckbox = $(\"#safe-import-checkbox\");\nconst $shrinkImagesCheckbox = $(\"#shrink-images-checkbox\");\nconst $textImportedAsTextCheckbox = $(\"#text-imported-as-text-checkbox\");\nconst $codeImportedAsCodeCheckbox = $(\"#code-imported-as-code-checkbox\");\nconst $explodeArchivesCheckbox = $(\"#explode-archives-checkbox\");\n\nlet parentNoteId = null;\n\nexport async function showDialog(noteId) {\n    $fileUploadInput.val('').trigger('change'); // to trigger Import button disabling listener below\n\n    $safeImportCheckbox.prop(\"checked\", true);\n    $shrinkImagesCheckbox.prop(\"checked\", true);\n    $textImportedAsTextCheckbox.prop(\"checked\", true);\n    $codeImportedAsCodeCheckbox.prop(\"checked\", true);\n    $explodeArchivesCheckbox.prop(\"checked\", true);\n\n    parentNoteId = noteId;\n\n    $noteTitle.text(await treeService.getNoteTitle(parentNoteId));\n\n    utils.openDialog($dialog);\n}\n\n$form.on('submit', () => {\n    // disabling so that import is not triggered again.\n    $importButton.attr(\"disabled\", \"disabled\");\n\n    importIntoNote(parentNoteId);\n\n    return false;\n});\n\nasync function importIntoNote(parentNoteId) {\n    const files = Array.from($fileUploadInput[0].files); // shallow copy since we're resetting the upload button below\n\n    const options = {\n        safeImport: boolToString($safeImportCheckbox),\n        shrinkImages: boolToString($shrinkImagesCheckbox),\n        textImportedAsText: boolToString($textImportedAsTextCheckbox),\n        codeImportedAsCode: boolToString($codeImportedAsCodeCheckbox),\n        explodeArchives: boolToString($explodeArchivesCheckbox)\n    };\n\n    $dialog.modal('hide');\n\n    await importService.uploadFiles(parentNoteId, files, options);\n}\n\nfunction boolToString($el) {\n    return $el.is(\":checked\") ? \"true\" : \"false\";\n}\n\n$fileUploadInput.on('change', () => {\n    if ($fileUploadInput.val()) {\n        $importButton.removeAttr(\"disabled\");\n    }\n    else {\n        $importButton.attr(\"disabled\", \"disabled\");\n    }\n});\n","import toastService from \"./toast.js\";\nimport server from \"./server.js\";\nimport ws from \"./ws.js\";\nimport utils from \"./utils.js\";\nimport appContext from \"./app_context.js\";\n\nexport async function uploadFiles(parentNoteId, files, options) {\n    if (files.length === 0) {\n        return;\n    }\n\n    const taskId = utils.randomString(10);\n    let noteId;\n    let counter = 0;\n\n    for (const file of files) {\n        counter++;\n\n        const formData = new FormData();\n        formData.append('upload', file);\n        formData.append('taskId', taskId);\n        formData.append('last', counter === files.length ? \"true\" : \"false\");\n\n        for (const key in options) {\n            formData.append(key, options[key]);\n        }\n\n        ({noteId} = await $.ajax({\n            url: baseApiUrl + 'notes/' + parentNoteId + '/import',\n            headers: server.getHeaders(),\n            data: formData,\n            dataType: 'json',\n            type: 'POST',\n            timeout: 60 * 60 * 1000,\n            contentType: false, // NEEDED, DON'T REMOVE THIS\n            processData: false, // NEEDED, DON'T REMOVE THIS\n        }));\n    }\n}\n\nfunction makeToast(id, message) {\n    return {\n        id: id,\n        title: \"Import status\",\n        message: message,\n        icon: \"plus\"\n    };\n}\n\nws.subscribeToMessages(async message => {\n    if (message.taskType !== 'import') {\n        return;\n    }\n\n    if (message.type === 'task-error') {\n        toastService.closePersistent(message.taskId);\n        toastService.showError(message.message);\n    } else if (message.type === 'task-progress-count') {\n        toastService.showPersistent(makeToast(message.taskId, \"Import in progress: \" + message.progressCount));\n    } else if (message.type === 'task-succeeded') {\n        const toast = makeToast(message.taskId, \"Import finished successfully.\");\n        toast.closeAfter = 5000;\n\n        toastService.showPersistent(toast);\n\n        if (message.result.importedNoteId) {\n            await appContext.tabManager.getActiveTabContext().setNote(message.result.importedNoteId);\n        }\n    }\n});\n\nexport default {\n    uploadFiles\n}"],"sourceRoot":""}