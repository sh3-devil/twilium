{"version":3,"sources":["webpack://trilium/./src/public/app/services/link_map.js","webpack://trilium/./src/public/app/dialogs/link_map.js","webpack://trilium/./src/public/app/services/library_loader.js"],"names":["linkOverlays","location","id","length","width","foldback","LinkMap","note","$linkMapContainer","options","this","Object","assign","maxDepth","maxNotes","zoom","stopCheckerCallback","linkMapContainerId","attr","jsPlumb","ready","initJsPlumbInstance","initPanZoom","loadNotesAndRelations","cleanup","links","server","noteId","noteIds","Set","map","l","concat","targetNoteId","size","add","notes","Array","from","graph","Springy","Graph","addNodes","addEdges","layout","Layout","ForceDirected","getNoteBox","noteBoxId","noteIdToId","$existingNoteBox","$","find","n","$noteBox","addClass","prop","title","then","$link","on","e","tooltip","append","mouseover","mouseout","removeClass","jsPlumbInstance","draggable","start","params","renderer","stop","drag","Renderer","eachNode","node","point","middleW","middleH","height","css","p","x","y","hasClass","moveToCenterOfElement","eachEdge","edge","connectionId","source","target","connection","connect","type","canvas","repaintEverything","element","owner","pzInstance","getOwner","center","elemBounds","getBoundingClientRect","containerBounds","centerX","left","centerY","top","transform","getTransform","newX","newY","moveTo","shown","IntersectionObserver","entries","isIntersecting","rootMargin","threshold","observe","panzoom","maxZoom","minZoom","smoothScroll","filterKey","dx","dy","dz","altKey","deleteEveryEndpoint","empty","zoomAbs","getInstance","Endpoint","ConnectionOverlays","PaintStyle","stroke","strokeWidth","HoverPaintStyle","Container","registerConnectionType","anchor","connector","overlays","$dialog","$maxNotesInput","linkMapService","getOptions","val","async","showDialog","utils","render","loadedScriptPromises","requireScript","url","ajax","dataType","cache","requireCss","document","querySelectorAll","el","href","some","endsWith","requireLibrary","library","cssUrl","js","scriptUrl","CKEDITOR","CODE_MIRROR","ESLINT","COMMONMARK","RELATION_MAP","LINK_MAP","PRINT_THIS","KNOCKOUT","CALENDAR_WIDGET"],"mappings":"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","file":"774.setup.js","sourcesContent":["import libraryLoader from \"./library_loader.js\";\nimport server from \"./server.js\";\nimport treeCache from \"./tree_cache.js\";\nimport linkService from \"./link.js\";\n\nconst linkOverlays = [\n    [ \"Arrow\", {\n        location: 1,\n        id: \"arrow\",\n        length: 10,\n        width: 10,\n        foldback: 0.7\n    } ]\n];\n\nexport default class LinkMap {\n    constructor(note, $linkMapContainer, options = {}) {\n        this.note = note;\n        this.options = Object.assign({\n            maxDepth: 10,\n            maxNotes: 30,\n            zoom: 1.0,\n            stopCheckerCallback: () => false\n        }, options);\n\n        this.$linkMapContainer = $linkMapContainer;\n        this.linkMapContainerId = this.$linkMapContainer.attr(\"id\");\n    }\n\n    async render() {\n        await libraryLoader.requireLibrary(libraryLoader.LINK_MAP);\n\n        jsPlumb.ready(() => {\n            if (this.options.stopCheckerCallback()) {\n                return;\n            }\n\n            this.initJsPlumbInstance();\n\n            this.initPanZoom();\n\n            this.loadNotesAndRelations();\n        });\n    }\n\n    async loadNotesAndRelations(options = {}) {\n        this.options = Object.assign(this.options, options);\n\n        this.cleanup();\n\n        if (this.options.stopCheckerCallback()) {\n            return;\n        }\n\n        const links = await server.post(`notes/${this.note.noteId}/link-map`, {\n            maxNotes: this.options.maxNotes,\n            maxDepth: this.options.maxDepth\n        });\n\n        const noteIds = new Set(links.map(l => l.noteId).concat(links.map(l => l.targetNoteId)));\n\n        if (noteIds.size === 0) {\n            noteIds.add(this.note.noteId);\n        }\n\n        // preload all notes\n        const notes = await treeCache.getNotes(Array.from(noteIds), true);\n\n        const graph = new Springy.Graph();\n        graph.addNodes(...noteIds);\n        graph.addEdges(...links.map(l => [l.noteId, l.targetNoteId]));\n\n        const layout = new Springy.Layout.ForceDirected(\n            graph,\n            this.options.stopCheckerCallback,\n            // param explanation here: https://github.com/dhotson/springy/issues/58\n            400.0, // Spring stiffness\n            600.0, // Node repulsion\n            0.15, // Damping\n            0.1 // min energy threshold\n        );\n\n        const getNoteBox = noteId => {\n            const noteBoxId = this.noteIdToId(noteId);\n            const $existingNoteBox = $(\"#\" + noteBoxId);\n\n            if ($existingNoteBox.length > 0) {\n                return $existingNoteBox;\n            }\n\n            const note = notes.find(n => n.noteId === noteId);\n\n            if (!note) {\n                return null;\n            }\n\n            const $noteBox = $(\"<div>\")\n                .addClass(\"note-box\")\n                .prop(\"id\", noteBoxId);\n\n            linkService.createNoteLink(noteId, {title: note.title}).then($link => {\n                $link.on('click', e => {\n                    try {\n                        $link.tooltip('dispose');\n                    }\n                    catch (e) {}\n\n                    linkService.goToLink(e);\n                });\n\n                $noteBox.append($(\"<span>\").addClass(\"title\").append($link));\n            });\n\n            if (noteId === this.note.noteId) {\n                $noteBox.addClass(\"link-map-active-note\");\n            }\n\n            $noteBox\n                .mouseover(() => this.$linkMapContainer.find(\".link-\" + noteId).addClass(\"jsplumb-connection-hover\"))\n                .mouseout(() => this.$linkMapContainer.find(\".link-\" + noteId).removeClass(\"jsplumb-connection-hover\"));\n\n            this.$linkMapContainer.append($noteBox);\n\n            this.jsPlumbInstance.draggable($noteBox[0], {\n                start: params => {\n                    this.renderer.stop();\n                },\n                drag: params => {},\n                stop: params => {}\n            });\n\n            return $noteBox;\n        };\n\n        if (this.options.stopCheckerCallback()) {\n            return;\n        }\n\n        this.renderer = new Springy.Renderer(layout);\n        await this.renderer.start(500);\n\n        layout.eachNode((node, point) => {\n            const $noteBox = getNoteBox(node.id);\n            const middleW = this.$linkMapContainer.width() / 2;\n            const middleH = this.$linkMapContainer.height() / 2;\n\n            $noteBox\n                .css(\"left\", (middleW + point.p.x * 100) + \"px\")\n                .css(\"top\", (middleH + point.p.y * 100) + \"px\");\n\n            if ($noteBox.hasClass(\"link-map-active-note\")) {\n                this.moveToCenterOfElement($noteBox[0]);\n            }\n        });\n\n        layout.eachEdge(edge => {\n            const connectionId = this.linkMapContainerId + '-' + edge.source.id + '-' + edge.target.id;\n\n            if ($(\"#\" + connectionId).length > 0) {\n                return;\n            }\n\n            getNoteBox(edge.source.id);\n            getNoteBox(edge.target.id);\n\n            const connection = this.jsPlumbInstance.connect({\n                source: this.noteIdToId(edge.source.id),\n                target: this.noteIdToId(edge.target.id),\n                type: 'link'\n            });\n\n            if (connection) {\n                $(connection.canvas)\n                    .prop(\"id\", connectionId)\n                    .addClass('link-' + edge.source.id)\n                    .addClass('link-' + edge.target.id);\n            }\n            else {\n                //console.debug(`connection not created for`, edge);\n            }\n        });\n\n        this.jsPlumbInstance.repaintEverything();\n    }\n\n    moveToCenterOfElement(element) {\n        const owner = this.pzInstance.getOwner();\n\n        const center = () => {\n            const elemBounds = element.getBoundingClientRect();\n            const containerBounds = owner.getBoundingClientRect();\n\n            const centerX = -elemBounds.left + containerBounds.left + (containerBounds.width / 2) - (elemBounds.width / 2);\n            const centerY = -elemBounds.top + containerBounds.top + (containerBounds.height / 2) - (elemBounds.height / 2);\n\n            const transform = this.pzInstance.getTransform();\n\n            const newX = transform.x + centerX;\n            const newY = transform.y + centerY;\n\n            this.pzInstance.moveTo(newX, newY);\n        };\n\n        let shown = false;\n\n        const observer = new IntersectionObserver(entries => {\n            if (!shown && entries[0].isIntersecting) {\n                shown = true;\n                center();\n            }\n        }, {\n            rootMargin: '0px',\n            threshold: 0.1\n        });\n\n        observer.observe(owner);\n    }\n\n    initPanZoom() {\n        if (this.pzInstance) {\n            return;\n        }\n\n        this.pzInstance = panzoom(this.$linkMapContainer[0], {\n            maxZoom: 2,\n            minZoom: 0.3,\n            smoothScroll: false,\n            filterKey: function (e, dx, dy, dz) {\n                // if ALT is pressed then panzoom should bubble the event up\n                // this is to preserve ALT-LEFT, ALT-RIGHT navigation working\n                return e.altKey;\n            }\n        });\n    }\n\n    cleanup() {\n        if (this.renderer) {\n            this.renderer.stop();\n        }\n\n        if (this.jsPlumbInstance) {\n            // delete all endpoints and connections\n            // this is done at this point (after async operations) to reduce flicker to the minimum\n            this.jsPlumbInstance.deleteEveryEndpoint();\n\n            // without this we still end up with note boxes remaining in the canvas\n            this.$linkMapContainer.empty();\n\n            // reset zoom/pan\n            this.pzInstance.zoomAbs(0, 0, this.options.zoom);\n            this.pzInstance.moveTo(0, 0);\n        }\n    }\n\n    initJsPlumbInstance() {\n        if (this.jsPlumbInstance) {\n            this.cleanup();\n\n            return;\n        }\n\n        this.jsPlumbInstance = jsPlumb.getInstance({\n            Endpoint: [\"Blank\", {}],\n            ConnectionOverlays: linkOverlays,\n            PaintStyle: { stroke: \"var(--muted-text-color)\", strokeWidth: 1 },\n            HoverPaintStyle: { stroke: \"var(--main-text-color)\", strokeWidth: 1 },\n            Container: this.$linkMapContainer.attr(\"id\")\n        });\n\n        this.jsPlumbInstance.registerConnectionType(\"link\", { anchor: \"Continuous\", connector: \"Straight\", overlays: linkOverlays });\n    }\n\n    noteIdToId(noteId) {\n        return this.linkMapContainerId + \"-note-\" + noteId;\n    }\n}","import utils from \"../services/utils.js\";\nimport LinkMapService from \"../services/link_map.js\";\nimport appContext from \"../services/app_context.js\";\n\nconst $linkMapContainer = $(\"#link-map-container\");\n\nconst $dialog = $(\"#link-map-dialog\");\nconst $maxNotesInput = $(\"#link-map-max-notes\");\n\nlet linkMapService;\n\nfunction getOptions() {\n    return {\n        maxNotes: $maxNotesInput.val()\n    };\n}\n\nexport async function showDialog() {\n    // set default settings\n    $maxNotesInput.val(20);\n\n    $linkMapContainer.css(\"height\", $(\"body\").height() - 150);\n\n    $linkMapContainer.empty();\n\n    utils.openDialog($dialog);\n}\n\n$dialog.on('shown.bs.modal', () => {\n    const note = appContext.tabManager.getActiveTabNote();\n\n    linkMapService = new LinkMapService(note, $linkMapContainer, getOptions());\n    linkMapService.render();\n});\n\n$maxNotesInput.on(\"input\", () => linkMapService.loadNotesAndRelations(getOptions()));\n","const CKEDITOR = {\"js\": [\"libraries/ckeditor/ckeditor.js\"]};\n\nconst CODE_MIRROR = {\n    js: [\n        \"libraries/codemirror/codemirror.js\",\n        \"libraries/codemirror/addon/mode/loadmode.js\",\n        \"libraries/codemirror/addon/fold/xml-fold.js\",\n        \"libraries/codemirror/addon/edit/matchbrackets.js\",\n        \"libraries/codemirror/addon/edit/matchtags.js\",\n        \"libraries/codemirror/addon/search/match-highlighter.js\",\n        \"libraries/codemirror/mode/meta.js\",\n        \"libraries/codemirror/addon/lint/lint.js\",\n        \"libraries/codemirror/addon/lint/eslint.js\"\n    ],\n    css: [\n        \"libraries/codemirror/codemirror.css\",\n        \"libraries/codemirror/addon/lint/lint.css\"\n    ]\n};\n\nconst ESLINT = {js: [\"libraries/eslint.js\"]};\n\nconst COMMONMARK = {js: [\"libraries/commonmark.min.js\"]};\n\nconst RELATION_MAP = {\n    js: [\n        \"libraries/jsplumb.js\",\n        \"libraries/panzoom.js\"\n    ],\n    css: [\n        \"stylesheets/relation_map.css\"\n    ]\n};\n\nconst LINK_MAP = {\n    js: [\n        \"libraries/jsplumb.js\",\n        \"libraries/panzoom.js\",\n        \"libraries/springy.js\"\n    ],\n    css: [\n        \"stylesheets/link_map.css\"\n    ]\n};\n\nconst PRINT_THIS = {js: [\"libraries/printThis.js\"]};\n\nconst KNOCKOUT = {js: [\"libraries/knockout.min.js\"]};\n\nconst CALENDAR_WIDGET = {css: [\"stylesheets/calendar.css\"]};\n\nasync function requireLibrary(library) {\n    if (library.css) {\n        library.css.map(cssUrl => requireCss(cssUrl));\n    }\n\n    if (library.js) {\n        for (const scriptUrl of library.js) {\n            await requireScript(scriptUrl);\n        }\n    }\n}\n\n// we save the promises in case of the same script being required concurrently multiple times\nconst loadedScriptPromises = {};\n\nasync function requireScript(url) {\n    if (!loadedScriptPromises[url]) {\n        loadedScriptPromises[url] = $.ajax({\n            url: url,\n            dataType: \"script\",\n            cache: true\n        });\n    }\n\n    await loadedScriptPromises[url];\n}\n\nasync function requireCss(url) {\n    const cssLinks = Array\n        .from(document.querySelectorAll('link'))\n        .map(el => el.href);\n\n    if (!cssLinks.some(l => l.endsWith(url))) {\n        $('head').append($('<link rel=\"stylesheet\" type=\"text/css\" />').attr('href', url));\n    }\n}\n\nexport default {\n    requireCss,\n    requireLibrary,\n    CKEDITOR,\n    CODE_MIRROR,\n    ESLINT,\n    COMMONMARK,\n    RELATION_MAP,\n    LINK_MAP,\n    PRINT_THIS,\n    KNOCKOUT,\n    CALENDAR_WIDGET\n}"],"sourceRoot":""}